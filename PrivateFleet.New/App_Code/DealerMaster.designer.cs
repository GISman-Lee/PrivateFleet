#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="privatefleet_staging")]
public partial class DealerMasterDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttblDealerMaster(tblDealerMaster instance);
  partial void UpdatetblDealerMaster(tblDealerMaster instance);
  partial void DeletetblDealerMaster(tblDealerMaster instance);
  partial void InsertDealersInfo(DealersInfo instance);
  partial void UpdateDealersInfo(DealersInfo instance);
  partial void DeleteDealersInfo(DealersInfo instance);
  #endregion
	
	public DealerMasterDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["privatefleet_stagingConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DealerMasterDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DealerMasterDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DealerMasterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DealerMasterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tblDealerMaster> tblDealerMasters
	{
		get
		{
			return this.GetTable<tblDealerMaster>();
		}
	}
	
	public System.Data.Linq.Table<DealersInfo> DealersInfos
	{
		get
		{
			return this.GetTable<DealersInfo>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDealerMaster")]
public partial class tblDealerMaster : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Key;
	
	private string _Company;
	
	private string _Email;
	
	private string _SecondaryEmail;
	
	private string _Fax;
	
	private string _Phone;
	
	private string _Mobile;
	
	private System.Nullable<int> _Location;
	
	private System.Nullable<int> _City_1;
	
	private string _City;
	
	private string _State;
	
	private string _StateId;
	
	private string _PCode;
	
	private string _SecondaryState;
	
	private string _SecondaryStateId;
	
	private bool _IsHotDealer;
	
	private System.Nullable<System.DateTime> _CreatedDate;
	
	private bool _IsActive;
	
	private System.Nullable<bool> _IsColdDealer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSecondaryEmailChanging(string value);
    partial void OnSecondaryEmailChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnMobileChanging(string value);
    partial void OnMobileChanged();
    partial void OnLocationChanging(System.Nullable<int> value);
    partial void OnLocationChanged();
    partial void OnCity_1Changing(System.Nullable<int> value);
    partial void OnCity_1Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnStateIdChanging(string value);
    partial void OnStateIdChanged();
    partial void OnPCodeChanging(string value);
    partial void OnPCodeChanged();
    partial void OnSecondaryStateChanging(string value);
    partial void OnSecondaryStateChanged();
    partial void OnSecondaryStateIdChanging(string value);
    partial void OnSecondaryStateIdChanged();
    partial void OnIsHotDealerChanging(bool value);
    partial void OnIsHotDealerChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsColdDealerChanging(System.Nullable<bool> value);
    partial void OnIsColdDealerChanged();
    #endregion
	
	public tblDealerMaster()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(MAX)")]
	public string Key
	{
		get
		{
			return this._Key;
		}
		set
		{
			if ((this._Key != value))
			{
				this.OnKeyChanging(value);
				this.SendPropertyChanging();
				this._Key = value;
				this.SendPropertyChanged("Key");
				this.OnKeyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(200)")]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(350)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryEmail", DbType="VarChar(350)")]
	public string SecondaryEmail
	{
		get
		{
			return this._SecondaryEmail;
		}
		set
		{
			if ((this._SecondaryEmail != value))
			{
				this.OnSecondaryEmailChanging(value);
				this.SendPropertyChanging();
				this._SecondaryEmail = value;
				this.SendPropertyChanged("SecondaryEmail");
				this.OnSecondaryEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
	public string Fax
	{
		get
		{
			return this._Fax;
		}
		set
		{
			if ((this._Fax != value))
			{
				this.OnFaxChanging(value);
				this.SendPropertyChanging();
				this._Fax = value;
				this.SendPropertyChanged("Fax");
				this.OnFaxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile", DbType="VarChar(50)")]
	public string Mobile
	{
		get
		{
			return this._Mobile;
		}
		set
		{
			if ((this._Mobile != value))
			{
				this.OnMobileChanging(value);
				this.SendPropertyChanging();
				this._Mobile = value;
				this.SendPropertyChanged("Mobile");
				this.OnMobileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="Int")]
	public System.Nullable<int> Location
	{
		get
		{
			return this._Location;
		}
		set
		{
			if ((this._Location != value))
			{
				this.OnLocationChanging(value);
				this.SendPropertyChanging();
				this._Location = value;
				this.SendPropertyChanged("Location");
				this.OnLocationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City_1", DbType="Int")]
	public System.Nullable<int> City_1
	{
		get
		{
			return this._City_1;
		}
		set
		{
			if ((this._City_1 != value))
			{
				this.OnCity_1Changing(value);
				this.SendPropertyChanging();
				this._City_1 = value;
				this.SendPropertyChanged("City_1");
				this.OnCity_1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(MAX)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(MAX)")]
	public string State
	{
		get
		{
			return this._State;
		}
		set
		{
			if ((this._State != value))
			{
				this.OnStateChanging(value);
				this.SendPropertyChanging();
				this._State = value;
				this.SendPropertyChanged("State");
				this.OnStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateId", DbType="VarChar(50)")]
	public string StateId
	{
		get
		{
			return this._StateId;
		}
		set
		{
			if ((this._StateId != value))
			{
				this.OnStateIdChanging(value);
				this.SendPropertyChanging();
				this._StateId = value;
				this.SendPropertyChanged("StateId");
				this.OnStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string PCode
	{
		get
		{
			return this._PCode;
		}
		set
		{
			if ((this._PCode != value))
			{
				this.OnPCodeChanging(value);
				this.SendPropertyChanging();
				this._PCode = value;
				this.SendPropertyChanged("PCode");
				this.OnPCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryState", DbType="VarChar(MAX)")]
	public string SecondaryState
	{
		get
		{
			return this._SecondaryState;
		}
		set
		{
			if ((this._SecondaryState != value))
			{
				this.OnSecondaryStateChanging(value);
				this.SendPropertyChanging();
				this._SecondaryState = value;
				this.SendPropertyChanged("SecondaryState");
				this.OnSecondaryStateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryStateId", DbType="VarChar(MAX)")]
	public string SecondaryStateId
	{
		get
		{
			return this._SecondaryStateId;
		}
		set
		{
			if ((this._SecondaryStateId != value))
			{
				this.OnSecondaryStateIdChanging(value);
				this.SendPropertyChanging();
				this._SecondaryStateId = value;
				this.SendPropertyChanged("SecondaryStateId");
				this.OnSecondaryStateIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsHotDealer", DbType="Bit NOT NULL")]
	public bool IsHotDealer
	{
		get
		{
			return this._IsHotDealer;
		}
		set
		{
			if ((this._IsHotDealer != value))
			{
				this.OnIsHotDealerChanging(value);
				this.SendPropertyChanging();
				this._IsHotDealer = value;
				this.SendPropertyChanged("IsHotDealer");
				this.OnIsHotDealerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColdDealer", DbType="Bit")]
	public System.Nullable<bool> IsColdDealer
	{
		get
		{
			return this._IsColdDealer;
		}
		set
		{
			if ((this._IsColdDealer != value))
			{
				this.OnIsColdDealerChanging(value);
				this.SendPropertyChanging();
				this._IsColdDealer = value;
				this.SendPropertyChanged("IsColdDealer");
				this.OnIsColdDealerChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
public partial class DealersInfo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
	private string _Company;
	
	private string _Email;
	
	private string _Phone;
	
	private bool _IsActive;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
	
	public DealersInfo()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", CanBeNull=false)]
	public string Company
	{
		get
		{
			return this._Company;
		}
		set
		{
			if ((this._Company != value))
			{
				this.OnCompanyChanging(value);
				this.SendPropertyChanging();
				this._Company = value;
				this.SendPropertyChanged("Company");
				this.OnCompanyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", CanBeNull=false)]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive")]
	public bool IsActive
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnIsActiveChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("IsActive");
				this.OnIsActiveChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
